name: 'Smoke tests'

on:
  pull_request:

env:
  TARGETS: f7
  DEFAULT_TARGET: f7
  FBT_TOOLCHAIN_PATH: /opt

jobs:
  run_smoke_on_bench:
    runs-on: [self-hosted, FlipperZeroIntegrationTest]
    steps:
      - name: 'Decontaminate previous build leftovers'
        run: |
          if [ -d .git ]; then
            git submodule status || git checkout "$(git rev-list --max-parents=0 HEAD | tail -n 1)"
          fi

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Install submodules'
        run:
          git submodule update --init --recursive --force

      - name: 'Get flipper from device manager (mock)'
        id: device
        run: |
          echo "flipper=/dev/ttyACM0" >> $GITHUB_OUTPUT

      - name: 'Temp for fixing fbt'
        id: fixing_fbt
        run: |
          source scripts/toolchain/fbtenv.sh --restore

      - name: 'Flash firmware'
        id: flashing
        if: success()
        run: |                               
          ./fbt flash OPENOCD_ADAPTER_SERIAL=49FF75065182575513201587 FORCE=1

      - name: 'Wait for flipper and format ext'
        id: format_ext
        if: steps.flashing.outcome == 'success'
        run: |
          source scripts/toolchain/fbtenv.sh
          python3 scripts/testing/await_flipper.py ${{steps.device.outputs.flipper}}
          python3 scripts/storage.py -p ${{steps.device.outputs.flipper}} format_ext
          python3 scripts/power.py -p ${{steps.device.outputs.flipper}} reboot
          python3 scripts/testing/await_flipper.py ${{steps.device.outputs.flipper}}

      - name: 'Installing additional python dependencies'
        id: autotest_dependencies
        if: success()
        run: |
          source scripts/toolchain/fbtenv.sh
          python3 -m venv /opt/flippigator-venv
          deactivate
          source /opt/flippigator-venv/bin/activate
          python3 -m pip install -r ./scripts/flippigator/requirements.txt

      - name: 'Run smoke tests'
        id: run_smoke
        if: steps.format_ext.outcome == 'success'
        timeout-minutes: 5
        run: |
          cd ./scripts/flippigator/
          pytest --port=${{steps.device.outputs.flipper}}
          deactivate

      - name: 'Generate allure reports'
        id: generate_allure_reports
        if: steps.run_smoke.outcome == 'success'
        timeout-minutes: 0.5
        run: |
          pwd

      - name: 'Upload allure reports'
        id: upload_allure_reports
        if: steps.generate_allure_reports.outcome == 'success'
        timeout-minutes: 0.5
        run: |
          pwd

      - name: 'Check GDB output'
        if: failure()
        run: |
          ./fbt gdb_trace_all OPENOCD_ADAPTER_SERIAL=2A0906016415303030303032 FIRMWARE_APP_SET=unit_tests FORCE=1
